{"version":3,"sources":["component/LoadingComponent.js","shared/baseUrl.js","component/HomeComponent.js","component/menuComponent.js","component/AboutComponent.js","component/ContactComponent.js","component/HeaderComponent.js","component/FooterComponent.js","component/DishDetail.js","redux/ActionsCreators/DishesActions.js","redux/ActionTypes.js","redux/ActionsCreators/PromoActions.js","redux/ActionsCreators/LeadersActions.js","redux/ActionsCreators/CommentsActions.js","redux/ActionsCreators/FeedbackActions.js","component/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMsg","leader","leaderLoading","leaderErrMess","RenderItem","to","id","width","CardImgOverlay","body","heading","Menu","menu","dishes","map","key","errMsg","Breadcrumb","BreadcrumbItem","active","RenderLeader","Media","tag","left","middle","object","RenderLeaders","leaders","list","About","CardHeader","title","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","isPhoneBD","test","validEmail","Contact","handleSubmit","bind","values","alert","JSON","stringify","this","resetFeedbackForm","postFeedback","fname","lname","email","telnum","agree","contactType","message","href","role","onSubmit","model","Row","Label","md","Col","text","placeholder","validators","show","messages","htmlFor","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","Header","state","isNavOpen","isModalOpen","isModalTblOpen","toggleNav","toggleModal","toggleModalTbl","setState","e","username","value","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarBrand","height","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","outline","Modal","toggle","ModalHeader","ModalBody","Form","handleLogin","FormGroup","Input","innerRef","input","handleReservation","ButtonGroup","Jumbotron","style","background","Color","Footer","RenderDish","top","RenderComments","comments","dishId","postComment","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","DishDetail","dishesErrMsg","commentList","dishesFailed","payload","addDishes","promosLoading","promosFailed","addPromos","promos","leaderFailed","addLeader","commentsFailed","addComments","addFeedback","feedback","Main","fetchComment","fetchPromos","fetchDishes","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","leaderErrMsg","exact","match","parseInt","params","commentErrMsg","withRouter","connect","dispach","dispatch","fetch","then","response","ok","error","Error","status","statusText","json","catch","actions","reset","res","newComment","toISOString","method","headers","credentials","addComment","console","log","firstname","lastname","tel","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49c36b9c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n","export const baseUrl = 'http://localhost:3005/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMsg}/>\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport function RenderCard ({item,isLoading,errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else { \r\n    return(\r\n        <FadeTransform in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n    <Card>\r\n        <CardImg src={baseUrl+item.image} alt={item.name} />\r\n        <CardBody>\r\n            <CardTitle><strong>{item.name}</strong></CardTitle>\r\n            {item.designation ? <CardSubtitle><em>{item.designation}</em></CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n    </Card>\r\n    </FadeTransform>\r\n    )}\r\n}\r\n\r\nexport default Home;  ","import React from 'react'\r\nimport { Card, CardImg, CardImgOverlay,CardTitle,Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl'\r\n\r\nfunction RenderItem({dish}){\r\n    \r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={ baseUrl+dish.image} alt={dish.name} />\r\n            <CardImgOverlay body className=\"ml-5\">\r\n                <CardTitle heading>{dish.name}</CardTitle>\r\n            </CardImgOverlay>  \r\n            </Link>                      \r\n        </Card>\r\n    )\r\n}\r\nconst Menu = props =>{\r\n    // console.log(props)\r\n    const menu = props.dishes.dishes.map((dish)=>{\r\n        return (\r\n            <div className=\"col-12 col-md-5 mt-1\" \r\n                key={dish.id}>\r\n                <RenderItem dish={dish}/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if(props.dishes.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(props.dishes.errMsg){\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\"> \r\n                <div className=\"col-12\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }\r\n    else{\r\n    return (   \r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n        <Breadcrumb>\r\n            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n        </div>                \r\n    </div>\r\n    <div className=\"row\">\r\n        {menu}\r\n    </div>\r\n</div>\r\n)}\r\n}\r\nexport default Menu;\r\n    ","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Stagger, Fade } from \"react-animation-components\"; \r\n\r\nfunction RenderLeader({ leader }) {\r\n\r\n    return (\r\n        <Fade in>\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                    <Media left middle> \r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nfunction RenderLeaders({ isLoading, errMess, leaders}){\r\n    if(isLoading){\r\n        return (\r\n            <Loading />\r\n        )\r\n    } else if(errMess){\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        )\r\n    } else {\r\n        return (\r\n            <Stagger in>\r\n                <Media list>\r\n                    {leaders}\r\n                </Media>\r\n            </Stagger>\r\n        )\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map(leader => <RenderLeader leader={leader} />);\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders isLoading = {props.leaders.isLoading} errMess = {props.leaders.errMess} leaders = {leaders} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,Col, Button, Label,Row  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Control,Form,Errors} from 'react-redux-form';\r\n\r\nconst required = val => val && val.length;\r\nconst maxLength = len => val => !val || val.length <= len;\r\nconst minLength = len => val => val && val.length >= len;\r\nconst isNumber = val => !isNaN(Number(val));\r\nconst isPhoneBD = val => /(^(\\+8801|8801|01|008801))[1|3-9]{1}(\\d){8}$/.test(val);\r\nconst validEmail = val => /\\S+@\\S+\\.\\S+/.test(val);\r\n\r\n// emailReg = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values){\r\n        alert('Current State is:'+JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        this.props.postFeedback(values.fname,values.lname,values.email,values.telnum,values.agree,values.contactType,values.message);\r\n    }\r\n\r\n    render(){\r\n        \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\" href=\"italki_320941\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                    </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send Us Your Feedback</h3>\r\n                    <Form onSubmit={(values)=>this.handleSubmit(values)} model=\"feedback\">\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Label md={2}>First Name</Label>\r\n                            <Col md={8}>\r\n                                <Control.text model=\".fname\" name=\"fname\" \r\n                                className=\"form-control\"  placeholder=\"First Name\" \r\n                                validators={{required,minLength:minLength(3),maxLength:maxLength(10)}}\r\n                                />\r\n                                <Errors \r\n                                    className=\"text-danger\" model=\".fname\" show=\"touched\" messages={{\r\n                                        required:\"Required\\n\",\r\n                                        minLength:\"Must be greater than 2 characters\\n\",\r\n                                        maxLength:\"Must be 10 characters or less\\n\",\r\n                                        }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".lname\" id=\"lastname\" name=\"lname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required,minLength:minLength(3),maxLength:maxLength(10)}}\r\n                                         />\r\n                                    <Errors \r\n                                    className=\"text-danger\" model=\".lname\" show=\"touched\" messages={{\r\n                                        required:\"Required\\n\",\r\n                                        minLength:\"Must be greater than 2 characters\\n\",\r\n                                        maxLength:\"Must be 10 characters or less\\n\",\r\n                                        }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. Number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{required,isNumber,isPhoneBD}}\r\n                                    />\r\n                                    <Errors \r\n                                    className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{\r\n                                        required:\"Required\\n\",\r\n                                        isNumber:\"Must be numbers\\n\",\r\n                                        isPhoneBD:\"Must be BD phone formate\"\r\n                                        }}\r\n                                />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\"\r\n                                    className=\"form-control\" \r\n                                    validators={{required,validEmail}}\r\n                                        />\r\n                                    <Errors \r\n                                    className=\"text-danger\" model=\".email\" show=\"touched\" messages={{\r\n                                        required:\"Required\\n\",\r\n                                        validEmail:\"Invalid Email\"\r\n                                        }}/>\r\n                                \r\n                                         </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 4, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                                </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={8}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    validators={{required,maxLength:maxLength(200)}} />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".message\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:\"Required\",\r\n                                            maxLength:\"Must be 200 or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                    </Col>\r\n                            </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav,NavbarToggler,Collapse,NavItem,Button,Modal,ModalBody,ModalHeader,Form,FormGroup,Input,Label,Row,Col, ButtonGroup} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors,Field } from 'react-redux-form';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen:false,\r\n          isModalTblOpen:false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleModalTbl = this.toggleModalTbl.bind(this);\r\n\r\n    }\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal() {\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n    });\r\n    }\r\n    toggleModalTbl() {\r\n        this.setState({\r\n            isModalTblOpen: !this.state.isModalTblOpen\r\n        });\r\n        }\r\n    handleLogin(e){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        e.preventDefault();\r\n    }\r\n    handleReservation(val){\r\n        this.toggleModalTbl();\r\n\r\n    }\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n            \r\n            <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                <Nav navbar className=\"ml-5\">\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                </NavItem>\r\n                </Nav>\r\n                <Nav navbar className=\"ml-auto\">\r\n                    <NavItem>\r\n                        <Button outline onClick={this.toggleModalTbl}><span className=\"fa fa-utensils fa-lg\">Reserve Table</span></Button>\r\n                    </NavItem>\r\n                </Nav>\r\n                <Nav navbar className=\"mx-3\">\r\n                    <NavItem>\r\n                        <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\">Login</span></Button>\r\n                    </NavItem>\r\n                </Nav>\r\n                \r\n            </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      {/* Login Modal */}\r\n      <Modal isOpen={this.state.isModalOpen} \r\n            toggle={this.toggleModal}>\r\n        <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n        <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} required/>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" name=\"remember\" innerRef={(input)=>this.remember=input} />\r\n                        Remember Me\r\n                    </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n       \r\n        {/* Reserve table modal  */}\r\n\r\n      <Modal isOpen={this.state.isModalTblOpen} \r\n            toggle={this.toggleModalTbl}>\r\n        <ModalHeader toggle={this.toggleModalTbl}>Reserve Table</ModalHeader>\r\n        <ModalBody>\r\n            <LocalForm onSubmit={val => this.handleReservation(val)}>\r\n                <Row className=\"form-group\">\r\n                    <Label md={3}>Number of Guests</Label>\r\n                    <Col md={8} className=\"d-flex align-items-center\">\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />1\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />2\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />3\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />4\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />5\r\n                    </Label>\r\n                    </FormGroup>\r\n                    <FormGroup check className=\"form-check-inline\">\r\n                    <Label check>\r\n                        <Input type=\"radio\" name=\"radio1\" />6\r\n                    </Label>\r\n                    </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label md={3}>Section</Label>\r\n                    <ButtonGroup className=\"btn-group btn-group-toggle\" md={8}>\r\n                        <Label className=\"btn btn-success\">Non-Smoking\r\n                            <Input type=\"radio\" name=\"options\" checked value=\"Non-Smoking\"></Input>\r\n                        </Label>\r\n                        <Label className=\"btn btn-danger\">Smoking\r\n                            <Input type=\"radio\" name=\"options\" value=\"Smoking\"></Input>\r\n                        </Label>\r\n                    </ButtonGroup>\r\n                </Row>\r\n                <Row className=\"form-row\">\r\n                    <Label md={3}>Date & Time</Label>\r\n                    <Col md={8} className=\"d-flex\">\r\n                        <Input type=\"date\" className=\"form-control d-inline mr-2\" placeholder=\"Date\"></Input>\r\n                        <Input type=\"time\" className=\"form-control d-inline\" placeholder=\"Time\"></Input>\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col md={3}></Col>\r\n                    <Button color=\"secondary\" className=\"mx-1 mt-3\">Cancel</Button>\r\n                    <Button color=\"primary\" className=\"mx-1 mt-3\">Submit</Button>\r\n                </Row>\r\n                \r\n            </LocalForm>\r\n                \r\n        </ModalBody>\r\n      </Modal>\r\n        \r\n      <Jumbotron style={{background: \"#9575CD\",  Color:\"floralwhite\"}}>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1 >Ristorante con Fusion</h1>\r\n                       <p >We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>                     \r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer mt-2\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react'\r\nimport { Card, CardImg, CardText, CardBody,Modal, ModalHeader, ModalBody,CardTitle, Breadcrumb, BreadcrumbItem, Button , Row, Col, Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform,Fade,Stagger} from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nfunction RenderDish({dish}) {\r\n    if (dish != null)\r\n    return(\r\n        <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n        <Card>\r\n            <CardImg top src={baseUrl+dish.image} alt={dish.name} />\r\n            <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n    );\r\nelse\r\n    return(\r\n        <div></div>\r\n    );\r\n}\r\n\r\nconst RenderComments = ({comments,dishId,postComment}) =>{\r\n    if(comments != null) {       \r\n        return (\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                    {comments.map((comment) => {\r\n                        return(\r\n                            <Fade in>\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                    </Stagger>\r\n                </ul>\r\n\r\n                <CommentForm dishId={dishId} postComment={postComment}/>\r\n            </div>           \r\n            );\r\n    } else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n    }   \r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen:false\r\n        };\r\n\r\n        }\r\n    toggleModal=()=>{\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n            });\r\n        }\r\n        handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\r\n        // alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n    render() {\r\n    return (\r\n        <React.Fragment>\r\n        <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\r\n                    <Col md={10}>\r\n                        <Control.select model=\".rating\" name=\"rating\"\r\n                            className=\"form-control\">\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                        </Control.select>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"name\" md={2}>Your Name</Label>\r\n                    <Col md={10}>\r\n                        <Control.text model=\".author\" id=\"name\" name=\"author\"\r\n                            placeholder=\"Your Name\"\r\n                            className=\"form-control\"\r\n                            validators={{\r\n                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                            }}\r\n                                />\r\n                        <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".author\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required',\r\n                                minLength: 'Must be greater than 2 characters',\r\n                                maxLength: 'Must be 15 characters or less'\r\n                            }}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Label htmlFor=\"Comment\" md={2}>Comment</Label>\r\n                    <Col md={10}>\r\n                        <Control.textarea model=\".comment\" id=\"Comment\" name=\"comment\"\r\n                            rows=\"6\"\r\n                            className=\"form-control\" validators={{\r\n                                required, maxLength: maxLength(150)\r\n                            }} />\r\n                            <Errors\r\n                            className=\"text-danger\"\r\n                            model=\".comment\"\r\n                            show=\"touched\"\r\n                            messages={{\r\n                                required: 'Required',\r\n                                maxLength: 'Must be 150 characters or less'\r\n                            }}\r\n                            />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                    <Col md={{size:1, offset: 2}}>\r\n                        <Button type=\"submit\" color=\"primary\">\r\n                        Submit\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </LocalForm>\r\n        </ModalBody>\r\n    </Modal>\r\n    </React.Fragment>\r\n    )\r\n    }\r\n}\r\n\r\nconst  DishDetail = (props) => {\r\n    if(props.dishesLoading){\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(props.dishesErrMsg){\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\"> \r\n                <div className=\"col-12\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        </div> \r\n        )\r\n    }\r\n    else if (props.dish != null)\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderDish dish={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <RenderComments comments={props.commentList} postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n         else\r\n         return(\r\n             <div></div>\r\n         ); \r\n    }\r\n  \r\n\r\nexport default DishDetail;","import * as ActionTypes from '../ActionTypes';\r\nimport {baseUrl} from '../../shared/baseUrl';\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading());\r\n\r\n    return fetch(baseUrl+ 'dishes')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response;\r\n        }else{\r\n            let error = new Error('Error' + response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errMsg = new Error(error.message);\r\n        throw errMsg;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(dishes=> dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch((dishesFailed(error.message))));\r\n};\r\n\r\nconst dishesLoading = () =>({\r\n    type:ActionTypes.LOAD_DISHES\r\n});\r\n const dishesFailed = (errMsg) =>({\r\n    type:ActionTypes.FAIL_DISHES,\r\n    payload:errMsg\r\n});\r\n const addDishes = (dishes) => ({\r\n    type:ActionTypes.ADD_DISHES,\r\n    payload:dishes\r\n});","export const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const LOAD_DISHES = 'LOAD_DISHES';\r\nexport const FAIL_DISHES = 'FAIL_DISHES';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADER_LOADING = 'LEADER_LOADING';\r\nexport const ADD_LEADER = 'ADD_LEADER';\r\nexport const LEADER_FAILED = 'LEADER_FAILED';\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import * as ActionTypes from '../ActionTypes';\r\nimport {baseUrl} from '../../shared/baseUrl';\r\n\r\nexport const fetchPromos = () => dispatch => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl+'promotions')\r\n    .then(res => {\r\n        if(res.ok){\r\n            return res;\r\n        }else{\r\n            let error = new Error('Error' + res.status + ': '+ res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errMsg = new Error(error.message);\r\n        throw errMsg;\r\n    }\r\n    )\r\n    .then(res => res.json())\r\n    .then(promotions=> dispatch(addPromos(promotions)))\r\n    .catch(error => dispatch((promosFailed(error.message))));\r\n};\r\n const promosLoading = () => ({\r\n    type:ActionTypes.PROMOS_LOADING\r\n});\r\n const promosFailed = errMsg => ({\r\n    type:ActionTypes.PROMOS_FAILED,\r\n    payload:errMsg\r\n});\r\n const addPromos = promos => ({\r\n    type:ActionTypes.ADD_PROMOS,\r\n    payload:promos\r\n})\r\n","import * as ActionTypes from '../ActionTypes';\r\nimport {baseUrl} from '../../shared/baseUrl';\r\n\r\n// Assignment - 4.1\r\nexport const fetchLeaders = () => dispatch => {\r\n    dispatch(leaderLoading());\r\n\r\n    return fetch(baseUrl+'leaders')\r\n    .then(res => {\r\n        if(res.ok){\r\n            return res;\r\n        }else{\r\n            let error = new Error('Error' + res.status + ': '+ res.statusText);\r\n            error.response = res;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        let errMsg = new Error(error.message);\r\n        throw errMsg;\r\n    }\r\n    )\r\n    .then(res => res.json())\r\n    .then(leaders=> dispatch(addLeader(leaders)))\r\n    .catch(error => dispatch((leaderFailed(error.message))));\r\n};\r\n const leaderLoading = () => ({\r\n    type:ActionTypes.LEADER_LOADING\r\n});\r\n const leaderFailed = errMsg => ({\r\n    type:ActionTypes.LEADER_FAILED,\r\n    payload:errMsg\r\n});\r\n const addLeader = leaders => ({\r\n    type:ActionTypes.ADD_LEADER,\r\n    payload:leaders\r\n})","import * as ActionTypes from '../ActionTypes';\r\nimport {baseUrl} from '../../shared/baseUrl';\r\n\r\nexport const fetchComment = () => dispatch => {\r\n    return fetch(baseUrl+'comments')\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    }, \r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nconst commentsFailed = errMsg => ({\r\n    type:ActionTypes.COMMENTS_FAILED,\r\n    payload:errMsg\r\n});\r\n\r\n const addComment = comment => ({\r\n    type:ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n});\r\n\r\nconst addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const postComment = (dishId,rating,author,comment) => dispatch =>{\r\n    const newComment = {\r\n        dishId,\r\n        rating,\r\n        author,\r\n        comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl+'comments',{\r\n        method:\"POST\",\r\n        body:JSON.stringify(newComment),\r\n        headers:{\"Content-Type\": \"application/json\"},\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n            throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); \r\n            alert('Your comment could not be posted\\nError: '+error.message); });\r\n\r\n}","import * as ActionTypes from '../ActionTypes';\r\nimport {baseUrl} from '../../shared/baseUrl';\r\n// Assignment 4.2\r\nexport const postFeedback = (firstname,lastname,email,tel,agree,contactType,message) => dispatch =>{\r\n    const newFeedback = {\r\n        firstname,lastname,email,tel,agree,contactType,message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    return fetch(baseUrl+'feedback',{\r\n        method:\"POST\",\r\n        body:JSON.stringify(newFeedback),\r\n        headers:{\"Content-Type\": \"application/json\"},\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        error => {\r\n            throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post Feedback', error.message); \r\n            alert('Your Feedback could not be posted\\nError: '+error.message); });\r\n\r\n}\r\n const addFeedback = (feedback)=>({\r\n    type:ActionTypes.ADD_FEEDBACK,\r\n    payload:feedback\r\n})\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './menuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishDetail';\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {actions} from 'react-redux-form';\r\nimport {fetchDishes} from '../redux/ActionsCreators/DishesActions';\r\nimport {fetchPromos} from '../redux/ActionsCreators/PromoActions';\r\nimport {fetchLeaders} from '../redux/ActionsCreators/LeadersActions';\r\nimport {fetchComment,postComment} from '../redux/ActionsCreators/CommentsActions';\r\nimport {postFeedback} from '../redux/ActionsCreators/FeedbackActions';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n};\r\n\r\nconst mapDispacthToProps = dispach =>({\r\n  fetchDishes:() => dispach(fetchDishes()),\r\n  resetFeedbackForm : () => {dispach(actions.reset('feedback'))},\r\n  fetchComment:() => dispach(fetchComment()),\r\n  fetchPromos: () => dispach(fetchPromos()),\r\n  fetchLeaders: () => dispach(fetchLeaders()),\r\n  postComment: (id,rating,author,comment) => dispach(postComment(id,rating,author,comment)),\r\n  postFeedback: (firstname,lastname,email,tel,agree,contactType,message)=>\r\n    dispach(postFeedback(firstname,lastname,email,tel,agree,contactType,message))\r\n});\r\n\r\n  \r\nclass Main extends Component {\r\n  \r\n  componentDidMount(){\r\n    this.props.fetchComment();\r\n    this.props.fetchPromos();\r\n    this.props.fetchDishes();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render(){\r\n      const DishWithId =({match})=>{\r\n          return(\r\n            <DishDetail dish={this.props.dishes.dishes.filter((dish)=> dish.id === parseInt(match.params.dishId,10))[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMsg = {this.props.dishes.errMsg}\r\n            commentList={this.props.comments.comments.filter((comment)=> comment.dishId === parseInt(match.params.dishId,10))}\r\n            postComment={this.props.postComment}\r\n            commentErrMsg = {this.props.comments.errMsg}\r\n            />\r\n          );\r\n      }\r\n    const HomePage = () => {\r\n        return(\r\n            <Home \r\n                dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n                dishesLoading={this.props.dishes.isLoading}\r\n                dishesErrMsg = {this.props.dishes.errMsg}\r\n                promotion={this.props.promotions.promotions.filter((promo)=> promo.featured)[0]}\r\n                promoLoading={this.props.promotions.isLoading}\r\n                promoErrMsg={this.props.promotions.errMsg}\r\n                leader={this.props.leaders.leaders.filter((leader)=> leader.featured)[0]}\r\n                leaderLoading ={this.props.leaders.isLoading}\r\n                leaderErrMsg = {this.props.leaders.errMsg}\r\n            />\r\n        );\r\n      } \r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={()=> \r\n                    <Menu dishes={this.props.dishes}/> } />\r\n              <Route exact path='/contactus' component={()=>\r\n                    <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\r\n              <Route exact path='/aboutus' component={()=> \r\n                    <About leaders={this.props.leaders} /> } />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispacthToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n    state={isLoading:true,errMsg:null,dishes:[]},\r\n    action) => {\r\n    switch(action.type){\r\n        case ActionTypes.LOAD_DISHES:\r\n            return {...state,isLoading:true,errMsg:null,dishes:[]};\r\n        case ActionTypes.FAIL_DISHES:\r\n            return {...state,isLoading:false,errMsg:action.payload};\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state,isLoading:false,errMsg:null,dishes:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state={errMsg:null,comments:[]},action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENT:\r\n            return {...state,comments:state.comments.concat(action.payload)}\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state,errMsg:action.payload,comments:[]};\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state,errMsg:null,comments:action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state={isLoading:true,errMsg:null,promotions:[]},action) => {\r\n    switch(action.type){\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state,isLoading:true,errMsg:null,promotions:[]};\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state,isLoading:false,errMsg:action.payload};\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state,isLoading:false,errMsg:null,promotions:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state=\r\n    {isLoading:true,errMsg:null,leaders:[]},\r\n    action) => {\r\n\r\n    switch(action.type){\r\n        case ActionTypes.LEADER_LOADING:\r\n            return {...state,isLoading:true,errMsg:null,leaders:[]};\r\n        case ActionTypes.LEADER_FAILED:\r\n            return {...state,isLoading:false,errMsg:action.payload};\r\n        case ActionTypes.ADD_LEADER:\r\n            return {...state,isLoading:false,errMsg:null,leaders:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    fname: '',\r\n    lname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'tel',\r\n    message: ''\r\n};","import React from 'react';\nimport Main from './component/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider } from 'react-redux';\nimport {ConfigureStore} from './redux/ConfigureStore'\n\nconst store = ConfigureStore();\n\nconst App = () =>{\n\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n        <Main/>\n       </div>\n     </BrowserRouter>\n     </Provider>\n    );\n  }\n \nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {Dishes} from './dishes'\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store = createStore(combineReducers({\r\n        dishes : Dishes,\r\n        comments:Comments,\r\n        promotions:Promotions,\r\n        leaders:Leaders,\r\n        ...createForms({\r\n            feedback : InitialFeedback\r\n        })\r\n    }),applyMiddleware(thunk,logger));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}